# Bicycle Shop

## Description

   The Bicycle Shop app is a console-based application that facilitates the purchasing of bicycles. An employee can add bicycles to the inventory and manage offers for those bicycles, while a customer can view the available bicycles and make offers.
	
## Purpose

   We want to see that you can meet deadlines and that you can code. You are expected to complete the following requirements and give a 5 minute presentation of your project to our QC team.

## Requirements
1. Functionality should reflect the below user stories.
2. Data is stored in a database.
3. A custom stored procedure is called to perform some portion of the functionality.
4. Data Access is performed through the use of JDBC in a data layer consisting of Data Access Objects.x
5. All input is received using the java.util.Scanner class.
6. All methods (aside from getters/setters, hashcode/equals, etc.) must have at least one JUnit test.

## User Stories
Total Points: 25 Points

* As a user, I can login. /////////
	* 2 points
* As an employee, I can add a bicycle to the shop.   ///   E
	* 3 points
* As a customer, I can view the available bicycles./////// C
	* 1 point
* As a customer, I can make an offer for a bicycle.  -- // ////// C
	* 3 points
* As an employee, I can accept or reject a pending offer for a bicycle. ////    E
	* 2 points
* As the system, I update a bicycle to an owned state when an offer is accepted.--/////
	* 2 points
* As the system, I reject all other pending offers for a bicycle when an offer is accepted./////--
	* 3 points
* As a user, I can register for a customer account. // //////C
	* 3 points
* As an employee, I can remove a bicycle from the shop.  -- ///// E
	* 2 points
* As a customer, I can view the bicycles that I own.  -- ////////////              C
	* 1 point
* As a customer, I can view my remaining payments for a bicycle.  /////         C
	* 1 point
* As an employee, I can view all payments.  --           ////            E
	* 1 point
* As the system, I can calculate the weekly payment.-- ///
	* 1 point
