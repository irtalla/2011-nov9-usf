2020-05-28 14:17:57 DEBUG logging:55 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-05-28 14:17:57 INFO  LogHelper:46 - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-05-28 14:17:57 INFO  Version:54 - HHH000412: Hibernate Core {4.3.11.Final}
2020-05-28 14:17:57 INFO  Environment:239 - HHH000206: hibernate.properties not found
2020-05-28 14:17:57 INFO  Environment:346 - HHH000021: Bytecode provider name : javassist
2020-05-28 14:17:58 INFO  Version:66 - HCANN000001: Hibernate Commons Annotations {4.0.5.Final}
2020-05-28 14:18:00 WARN  JdbcServicesImpl:204 - HHH000342: Could not obtain connection to query metadata : Cannot create PoolableConnectionFactory (ORA-01017: invalid username/password; logon denied
)
2020-05-28 14:18:36 DEBUG logging:55 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-05-28 14:18:36 INFO  LogHelper:46 - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-05-28 14:18:36 INFO  Version:54 - HHH000412: Hibernate Core {4.3.11.Final}
2020-05-28 14:18:36 INFO  Environment:239 - HHH000206: hibernate.properties not found
2020-05-28 14:18:36 INFO  Environment:346 - HHH000021: Bytecode provider name : javassist
2020-05-28 14:18:36 INFO  Version:66 - HCANN000001: Hibernate Commons Annotations {4.0.5.Final}
2020-05-28 14:18:38 WARN  JdbcServicesImpl:204 - HHH000342: Could not obtain connection to query metadata : Cannot create PoolableConnectionFactory (ORA-01017: invalid username/password; logon denied
)
2020-05-28 14:18:38 INFO  Dialect:145 - HHH000400: Using dialect: org.hibernate.dialect.Oracle10gDialect
2020-05-28 14:18:38 INFO  LobCreatorBuilder:88 - HHH000422: Disabling contextual LOB creation as connection was null
2020-05-28 14:18:39 INFO  ASTQueryTranslatorFactory:47 - HHH000397: Using ASTQueryTranslatorFactory
2020-05-28 14:18:41 WARN  SqlExceptionHelper:144 - SQL Error: 0, SQLState: null
2020-05-28 14:18:41 ERROR SqlExceptionHelper:146 - Cannot create PoolableConnectionFactory (ORA-01017: invalid username/password; logon denied
)
2020-05-28 14:18:56 DEBUG logging:55 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-05-28 14:18:56 INFO  LogHelper:46 - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-05-28 14:18:56 INFO  Version:54 - HHH000412: Hibernate Core {4.3.11.Final}
2020-05-28 14:18:56 INFO  Environment:239 - HHH000206: hibernate.properties not found
2020-05-28 14:18:56 INFO  Environment:346 - HHH000021: Bytecode provider name : javassist
2020-05-28 14:18:56 INFO  Version:66 - HCANN000001: Hibernate Commons Annotations {4.0.5.Final}
2020-05-28 14:18:58 INFO  Dialect:145 - HHH000400: Using dialect: org.hibernate.dialect.Oracle10gDialect
2020-05-28 14:18:58 INFO  ASTQueryTranslatorFactory:47 - HHH000397: Using ASTQueryTranslatorFactory
2020-05-28 14:19:00 WARN  SqlExceptionHelper:144 - SQL Error: 1, SQLState: 23000
2020-05-28 14:19:00 ERROR SqlExceptionHelper:146 - ORA-00001: unique constraint (C##FLORIST.SYS_C008072) violated

2020-05-28 14:19:00 INFO  AbstractBatchImpl:208 - HHH000010: On release of batch it still contained JDBC statements
2020-05-28 14:19:49 DEBUG logging:55 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-05-28 14:19:49 INFO  LogHelper:46 - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-05-28 14:19:49 INFO  Version:54 - HHH000412: Hibernate Core {4.3.11.Final}
2020-05-28 14:19:49 INFO  Environment:239 - HHH000206: hibernate.properties not found
2020-05-28 14:19:49 INFO  Environment:346 - HHH000021: Bytecode provider name : javassist
2020-05-28 14:19:50 INFO  Version:66 - HCANN000001: Hibernate Commons Annotations {4.0.5.Final}
2020-05-28 14:19:51 INFO  Dialect:145 - HHH000400: Using dialect: org.hibernate.dialect.Oracle10gDialect
2020-05-28 14:19:52 INFO  ASTQueryTranslatorFactory:47 - HHH000397: Using ASTQueryTranslatorFactory
2020-05-28 14:19:54 WARN  SqlExceptionHelper:144 - SQL Error: 1, SQLState: 23000
2020-05-28 14:19:54 ERROR SqlExceptionHelper:146 - ORA-00001: unique constraint (C##FLORIST.SYS_C008072) violated

2020-05-28 14:19:54 INFO  AbstractBatchImpl:208 - HHH000010: On release of batch it still contained JDBC statements
2020-05-28 14:19:57 DEBUG logging:55 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-05-28 14:19:57 INFO  LogHelper:46 - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-05-28 14:19:57 INFO  Version:54 - HHH000412: Hibernate Core {4.3.11.Final}
2020-05-28 14:19:57 INFO  Environment:239 - HHH000206: hibernate.properties not found
2020-05-28 14:19:57 INFO  Environment:346 - HHH000021: Bytecode provider name : javassist
2020-05-28 14:19:58 INFO  Version:66 - HCANN000001: Hibernate Commons Annotations {4.0.5.Final}
2020-05-28 14:19:59 INFO  Dialect:145 - HHH000400: Using dialect: org.hibernate.dialect.Oracle10gDialect
2020-05-28 14:20:00 INFO  ASTQueryTranslatorFactory:47 - HHH000397: Using ASTQueryTranslatorFactory
2020-05-28 14:20:02 WARN  SqlExceptionHelper:144 - SQL Error: 1, SQLState: 23000
2020-05-28 14:20:02 ERROR SqlExceptionHelper:146 - ORA-00001: unique constraint (C##FLORIST.SYS_C008072) violated

2020-05-28 14:20:02 INFO  AbstractBatchImpl:208 - HHH000010: On release of batch it still contained JDBC statements
2020-05-28 14:20:05 DEBUG logging:55 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-05-28 14:20:06 INFO  LogHelper:46 - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-05-28 14:20:06 INFO  Version:54 - HHH000412: Hibernate Core {4.3.11.Final}
2020-05-28 14:20:06 INFO  Environment:239 - HHH000206: hibernate.properties not found
2020-05-28 14:20:06 INFO  Environment:346 - HHH000021: Bytecode provider name : javassist
2020-05-28 14:20:06 INFO  Version:66 - HCANN000001: Hibernate Commons Annotations {4.0.5.Final}
2020-05-28 14:20:08 INFO  Dialect:145 - HHH000400: Using dialect: org.hibernate.dialect.Oracle10gDialect
2020-05-28 14:20:08 INFO  ASTQueryTranslatorFactory:47 - HHH000397: Using ASTQueryTranslatorFactory
2020-05-28 14:20:10 WARN  SqlExceptionHelper:144 - SQL Error: 1, SQLState: 23000
2020-05-28 14:20:10 ERROR SqlExceptionHelper:146 - ORA-00001: unique constraint (C##FLORIST.SYS_C008072) violated

2020-05-28 14:20:10 INFO  AbstractBatchImpl:208 - HHH000010: On release of batch it still contained JDBC statements
2020-05-28 14:20:13 DEBUG logging:55 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-05-28 14:20:13 INFO  LogHelper:46 - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-05-28 14:20:14 INFO  Version:54 - HHH000412: Hibernate Core {4.3.11.Final}
2020-05-28 14:20:14 INFO  Environment:239 - HHH000206: hibernate.properties not found
2020-05-28 14:20:14 INFO  Environment:346 - HHH000021: Bytecode provider name : javassist
2020-05-28 14:20:14 INFO  Version:66 - HCANN000001: Hibernate Commons Annotations {4.0.5.Final}
2020-05-28 14:20:15 INFO  Dialect:145 - HHH000400: Using dialect: org.hibernate.dialect.Oracle10gDialect
2020-05-28 14:20:16 INFO  ASTQueryTranslatorFactory:47 - HHH000397: Using ASTQueryTranslatorFactory
2020-05-28 14:20:18 WARN  SqlExceptionHelper:144 - SQL Error: 1, SQLState: 23000
2020-05-28 14:20:18 ERROR SqlExceptionHelper:146 - ORA-00001: unique constraint (C##FLORIST.SYS_C008072) violated

2020-05-28 14:20:18 INFO  AbstractBatchImpl:208 - HHH000010: On release of batch it still contained JDBC statements
2020-05-28 14:20:21 DEBUG logging:55 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-05-28 14:20:21 INFO  LogHelper:46 - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-05-28 14:20:21 INFO  Version:54 - HHH000412: Hibernate Core {4.3.11.Final}
2020-05-28 14:20:21 INFO  Environment:239 - HHH000206: hibernate.properties not found
2020-05-28 14:20:21 INFO  Environment:346 - HHH000021: Bytecode provider name : javassist
2020-05-28 14:20:21 INFO  Version:66 - HCANN000001: Hibernate Commons Annotations {4.0.5.Final}
2020-05-28 14:20:23 INFO  Dialect:145 - HHH000400: Using dialect: org.hibernate.dialect.Oracle10gDialect
2020-05-28 14:20:24 INFO  ASTQueryTranslatorFactory:47 - HHH000397: Using ASTQueryTranslatorFactory
2020-05-28 15:37:19 DEBUG logging:55 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-05-28 15:37:19 INFO  LogHelper:46 - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-05-28 15:37:19 INFO  Version:54 - HHH000412: Hibernate Core {4.3.11.Final}
2020-05-28 15:37:19 INFO  Environment:239 - HHH000206: hibernate.properties not found
2020-05-28 15:37:19 INFO  Environment:346 - HHH000021: Bytecode provider name : javassist
2020-05-28 15:37:20 INFO  Version:66 - HCANN000001: Hibernate Commons Annotations {4.0.5.Final}
2020-05-28 15:37:21 INFO  Dialect:145 - HHH000400: Using dialect: org.hibernate.dialect.Oracle10gDialect
2020-05-28 15:37:22 INFO  ASTQueryTranslatorFactory:47 - HHH000397: Using ASTQueryTranslatorFactory
2020-05-28 15:39:49 DEBUG logging:55 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-05-28 15:39:49 INFO  LogHelper:46 - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-05-28 15:39:49 INFO  Version:54 - HHH000412: Hibernate Core {4.3.11.Final}
2020-05-28 15:39:49 INFO  Environment:239 - HHH000206: hibernate.properties not found
2020-05-28 15:39:49 INFO  Environment:346 - HHH000021: Bytecode provider name : javassist
2020-05-28 15:39:50 INFO  Version:66 - HCANN000001: Hibernate Commons Annotations {4.0.5.Final}
2020-05-28 15:39:51 INFO  Dialect:145 - HHH000400: Using dialect: org.hibernate.dialect.Oracle10gDialect
2020-05-28 15:39:52 INFO  ASTQueryTranslatorFactory:47 - HHH000397: Using ASTQueryTranslatorFactory
2020-05-28 15:49:08 DEBUG logging:55 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-05-28 15:49:08 INFO  LogHelper:46 - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-05-28 15:49:08 INFO  Version:54 - HHH000412: Hibernate Core {4.3.11.Final}
2020-05-28 15:49:08 INFO  Environment:239 - HHH000206: hibernate.properties not found
2020-05-28 15:49:08 INFO  Environment:346 - HHH000021: Bytecode provider name : javassist
2020-05-28 15:49:08 INFO  Version:66 - HCANN000001: Hibernate Commons Annotations {4.0.5.Final}
2020-05-28 15:49:10 INFO  Dialect:145 - HHH000400: Using dialect: org.hibernate.dialect.Oracle10gDialect
2020-05-28 15:49:10 INFO  ASTQueryTranslatorFactory:47 - HHH000397: Using ASTQueryTranslatorFactory
2020-05-28 15:53:37 DEBUG logging:55 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-05-28 15:53:37 INFO  LogHelper:46 - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-05-28 15:53:37 INFO  Version:54 - HHH000412: Hibernate Core {4.3.11.Final}
2020-05-28 15:53:37 INFO  Environment:239 - HHH000206: hibernate.properties not found
2020-05-28 15:53:37 INFO  Environment:346 - HHH000021: Bytecode provider name : javassist
2020-05-28 15:53:37 INFO  Version:66 - HCANN000001: Hibernate Commons Annotations {4.0.5.Final}
2020-05-28 15:53:39 INFO  Dialect:145 - HHH000400: Using dialect: org.hibernate.dialect.Oracle10gDialect
2020-05-28 15:53:39 INFO  ASTQueryTranslatorFactory:47 - HHH000397: Using ASTQueryTranslatorFactory
2020-05-28 15:54:50 DEBUG logging:55 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-05-28 15:54:50 INFO  LogHelper:46 - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-05-28 15:54:50 INFO  Version:54 - HHH000412: Hibernate Core {4.3.11.Final}
2020-05-28 15:54:50 INFO  Environment:239 - HHH000206: hibernate.properties not found
2020-05-28 15:54:50 INFO  Environment:346 - HHH000021: Bytecode provider name : javassist
2020-05-28 15:54:51 INFO  Version:66 - HCANN000001: Hibernate Commons Annotations {4.0.5.Final}
2020-05-28 15:54:53 INFO  Dialect:145 - HHH000400: Using dialect: org.hibernate.dialect.Oracle10gDialect
2020-05-28 15:54:53 INFO  ASTQueryTranslatorFactory:47 - HHH000397: Using ASTQueryTranslatorFactory
2020-05-28 15:56:30 DEBUG logging:55 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-05-28 15:56:30 INFO  LogHelper:46 - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-05-28 15:56:30 INFO  Version:54 - HHH000412: Hibernate Core {4.3.11.Final}
2020-05-28 15:56:30 INFO  Environment:239 - HHH000206: hibernate.properties not found
2020-05-28 15:56:30 INFO  Environment:346 - HHH000021: Bytecode provider name : javassist
2020-05-28 15:56:30 INFO  Version:66 - HCANN000001: Hibernate Commons Annotations {4.0.5.Final}
2020-05-28 15:56:32 INFO  Dialect:145 - HHH000400: Using dialect: org.hibernate.dialect.Oracle10gDialect
2020-05-28 15:56:32 INFO  ASTQueryTranslatorFactory:47 - HHH000397: Using ASTQueryTranslatorFactory
2020-05-28 15:57:18 DEBUG logging:55 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-05-28 15:57:18 INFO  LogHelper:46 - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-05-28 15:57:18 INFO  Version:54 - HHH000412: Hibernate Core {4.3.11.Final}
2020-05-28 15:57:18 INFO  Environment:239 - HHH000206: hibernate.properties not found
2020-05-28 15:57:18 INFO  Environment:346 - HHH000021: Bytecode provider name : javassist
2020-05-28 15:57:18 INFO  Version:66 - HCANN000001: Hibernate Commons Annotations {4.0.5.Final}
2020-05-28 15:57:20 INFO  Dialect:145 - HHH000400: Using dialect: org.hibernate.dialect.Oracle10gDialect
2020-05-28 15:57:20 INFO  ASTQueryTranslatorFactory:47 - HHH000397: Using ASTQueryTranslatorFactory
2020-05-28 15:59:38 DEBUG logging:55 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-05-28 15:59:38 INFO  LogHelper:46 - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-05-28 15:59:39 INFO  Version:54 - HHH000412: Hibernate Core {4.3.11.Final}
2020-05-28 15:59:39 INFO  Environment:239 - HHH000206: hibernate.properties not found
2020-05-28 15:59:39 INFO  Environment:346 - HHH000021: Bytecode provider name : javassist
2020-05-28 15:59:39 INFO  Version:66 - HCANN000001: Hibernate Commons Annotations {4.0.5.Final}
2020-05-28 15:59:40 INFO  Dialect:145 - HHH000400: Using dialect: org.hibernate.dialect.Oracle10gDialect
2020-05-28 15:59:41 INFO  ASTQueryTranslatorFactory:47 - HHH000397: Using ASTQueryTranslatorFactory
2020-05-28 15:59:43 TRACE FlowerService:21 - Method with signature: List com.revature.services.FlowerService.getAll()
2020-05-28 15:59:43 TRACE FlowerService:22 - with arguments: []
2020-05-28 15:59:43 TRACE $Proxy36:21 - Method with signature: List org.springframework.data.jpa.repository.JpaRepository.findAll()
2020-05-28 15:59:43 TRACE $Proxy36:22 - with arguments: []
2020-05-28 15:59:43 TRACE $Proxy36:30 - List org.springframework.data.jpa.repository.JpaRepository.findAll() returned: [Flower [id=6, name=Tulip, currentPrice=2.99], Flower [id=10, name=Tulip, currentPrice=2.99], Flower [id=11, name=Tulip, currentPrice=2.99], Flower [id=1, name=rose, currentPrice=5.99], Flower [id=2, name=daisy, currentPrice=5.25], Flower [id=3, name=sunflower, currentPrice=6.99], Flower [id=4, name=hibiscus, currentPrice=9.89], Flower [id=5, name=peony, currentPrice=5.85], Flower [id=8, name=Tulip, currentPrice=2.99], Flower [id=9, name=Tulip, currentPrice=2.99]]
2020-05-28 15:59:43 TRACE $Proxy36:30 - List com.revature.services.FlowerService.getAll() returned: [Flower [id=6, name=Tulip, currentPrice=2.99], Flower [id=10, name=Tulip, currentPrice=2.99], Flower [id=11, name=Tulip, currentPrice=2.99], Flower [id=1, name=rose, currentPrice=5.99], Flower [id=2, name=daisy, currentPrice=5.25], Flower [id=3, name=sunflower, currentPrice=6.99], Flower [id=4, name=hibiscus, currentPrice=9.89], Flower [id=5, name=peony, currentPrice=5.85], Flower [id=8, name=Tulip, currentPrice=2.99], Flower [id=9, name=Tulip, currentPrice=2.99]]
2020-05-28 15:59:43 TRACE FlowerService:21 - Method with signature: void com.revature.services.FlowerService.addFlower(Flower)
2020-05-28 15:59:43 TRACE FlowerService:22 - with arguments: [Flower [id=null, name=Tulip, currentPrice=2.99]]
2020-05-28 15:59:43 TRACE $Proxy36:21 - Method with signature: Object org.springframework.data.repository.CrudRepository.save(Object)
2020-05-28 15:59:43 TRACE $Proxy36:22 - with arguments: [Flower [id=null, name=Tulip, currentPrice=2.99]]
2020-05-28 15:59:43 TRACE $Proxy36:30 - Object org.springframework.data.repository.CrudRepository.save(Object) returned: Flower [id=12, name=Tulip, currentPrice=2.99]
2020-05-28 15:59:43 TRACE $Proxy36:30 - void com.revature.services.FlowerService.addFlower(Flower) returned: null
2020-05-28 15:59:43 TRACE FlowerService:21 - Method with signature: List com.revature.services.FlowerService.getAll()
2020-05-28 15:59:43 TRACE FlowerService:22 - with arguments: []
2020-05-28 15:59:43 TRACE $Proxy36:21 - Method with signature: List org.springframework.data.jpa.repository.JpaRepository.findAll()
2020-05-28 15:59:43 TRACE $Proxy36:22 - with arguments: []
2020-05-28 15:59:43 TRACE $Proxy36:30 - List org.springframework.data.jpa.repository.JpaRepository.findAll() returned: [Flower [id=12, name=Tulip, currentPrice=2.99], Flower [id=6, name=Tulip, currentPrice=2.99], Flower [id=10, name=Tulip, currentPrice=2.99], Flower [id=11, name=Tulip, currentPrice=2.99], Flower [id=1, name=rose, currentPrice=5.99], Flower [id=2, name=daisy, currentPrice=5.25], Flower [id=3, name=sunflower, currentPrice=6.99], Flower [id=4, name=hibiscus, currentPrice=9.89], Flower [id=5, name=peony, currentPrice=5.85], Flower [id=8, name=Tulip, currentPrice=2.99], Flower [id=9, name=Tulip, currentPrice=2.99]]
2020-05-28 15:59:43 TRACE $Proxy36:30 - List com.revature.services.FlowerService.getAll() returned: [Flower [id=12, name=Tulip, currentPrice=2.99], Flower [id=6, name=Tulip, currentPrice=2.99], Flower [id=10, name=Tulip, currentPrice=2.99], Flower [id=11, name=Tulip, currentPrice=2.99], Flower [id=1, name=rose, currentPrice=5.99], Flower [id=2, name=daisy, currentPrice=5.25], Flower [id=3, name=sunflower, currentPrice=6.99], Flower [id=4, name=hibiscus, currentPrice=9.89], Flower [id=5, name=peony, currentPrice=5.85], Flower [id=8, name=Tulip, currentPrice=2.99], Flower [id=9, name=Tulip, currentPrice=2.99]]
2020-05-28 15:59:43 TRACE FlowerService:21 - Method with signature: Flower com.revature.services.FlowerService.getFlower(Integer)
2020-05-28 15:59:43 TRACE FlowerService:22 - with arguments: [1]
2020-05-28 15:59:43 TRACE $Proxy36:21 - Method with signature: Object org.springframework.data.repository.CrudRepository.findOne(Serializable)
2020-05-28 15:59:43 TRACE $Proxy36:22 - with arguments: [1]
2020-05-28 15:59:43 TRACE $Proxy36:30 - Object org.springframework.data.repository.CrudRepository.findOne(Serializable) returned: Flower [id=1, name=rose, currentPrice=5.99]
2020-05-28 15:59:43 TRACE $Proxy36:30 - Flower com.revature.services.FlowerService.getFlower(Integer) returned: Flower [id=1, name=rose, currentPrice=5.99]
2020-05-28 15:59:43 TRACE PurchaseService:21 - Method with signature: Set com.revature.services.PurchaseService.getPurchasesByFlower(Flower)
2020-05-28 15:59:43 TRACE PurchaseService:22 - with arguments: [Flower [id=1, name=rose, currentPrice=5.99]]
2020-05-28 15:59:44 TRACE $Proxy39:21 - Method with signature: Set com.revature.data.PurchaseRepository.findByFlower(Flower)
2020-05-28 15:59:44 TRACE $Proxy39:22 - with arguments: [Flower [id=1, name=rose, currentPrice=5.99]]
2020-05-28 15:59:44 TRACE $Proxy39:30 - Set com.revature.data.PurchaseRepository.findByFlower(Flower) returned: [Purchase [id=1, flower=Flower [id=1, name=rose, currentPrice=5.99], price=6.99], Purchase [id=2, flower=Flower [id=1, name=rose, currentPrice=5.99], price=4.99]]
2020-05-28 15:59:44 TRACE $Proxy39:30 - Set com.revature.services.PurchaseService.getPurchasesByFlower(Flower) returned: [Purchase [id=1, flower=Flower [id=1, name=rose, currentPrice=5.99], price=6.99], Purchase [id=2, flower=Flower [id=1, name=rose, currentPrice=5.99], price=4.99]]
2020-05-28 15:59:44 TRACE FlowerService:21 - Method with signature: void com.revature.services.FlowerService.throwExceptionFlower(String)
2020-05-28 15:59:44 TRACE FlowerService:22 - with arguments: [null]
2020-05-28 15:59:44 ERROR FlowerService:26 - 
2020-05-28 15:59:44 WARN  FlowerService:27 - [com.revature.services.FlowerService.throwExceptionFlower(FlowerService.java:41), com.revature.services.FlowerService$$FastClassBySpringCGLIB$$ed5f9599.invoke(<generated>), org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218), org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163), org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88), com.revature.aspects.LoggingAspect.log(LoggingAspect.java:24), sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method), sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source), sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source), java.lang.reflect.Method.invoke(Unknown Source), org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644), org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633), org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186), org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:294), org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186), org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186), org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688), com.revature.services.FlowerService$$EnhancerBySpringCGLIB$$ad0b39a4.throwExceptionFlower(<generated>), com.revature.driver.FlowerDriver.main(FlowerDriver.java:28)]
2020-12-23 15:05:34 DEBUG logging:55 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-12-23 15:05:34 INFO  LogHelper:46 - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-12-23 15:05:35 INFO  Version:54 - HHH000412: Hibernate Core {4.3.11.Final}
2020-12-23 15:05:35 INFO  Environment:239 - HHH000206: hibernate.properties not found
2020-12-23 15:05:35 INFO  Environment:346 - HHH000021: Bytecode provider name : javassist
2020-12-23 15:05:35 INFO  Version:66 - HCANN000001: Hibernate Commons Annotations {4.0.5.Final}
2020-12-23 15:05:37 INFO  Dialect:145 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2020-12-23 15:05:37 INFO  LobCreatorBuilder:123 - HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
2020-12-23 15:06:13 DEBUG logging:55 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-12-23 15:06:13 INFO  LogHelper:46 - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-12-23 15:06:14 INFO  Version:54 - HHH000412: Hibernate Core {4.3.11.Final}
2020-12-23 15:06:14 INFO  Environment:239 - HHH000206: hibernate.properties not found
2020-12-23 15:06:14 INFO  Environment:346 - HHH000021: Bytecode provider name : javassist
2020-12-23 15:06:14 INFO  Version:66 - HCANN000001: Hibernate Commons Annotations {4.0.5.Final}
2020-12-23 15:06:16 INFO  Dialect:145 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2020-12-23 15:06:16 INFO  LobCreatorBuilder:123 - HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
2020-12-23 15:06:16 INFO  ASTQueryTranslatorFactory:47 - HHH000397: Using ASTQueryTranslatorFactory
2020-12-23 15:06:19 TRACE FlowerService:21 - Method with signature: List com.revature.services.FlowerService.getAll()
2020-12-23 15:06:19 TRACE FlowerService:22 - with arguments: []
2020-12-23 15:06:19 TRACE $Proxy34:21 - Method with signature: List org.springframework.data.jpa.repository.JpaRepository.findAll()
2020-12-23 15:06:19 TRACE $Proxy34:22 - with arguments: []
2020-12-23 15:06:20 WARN  SqlExceptionHelper:144 - SQL Error: 0, SQLState: 42703
2020-12-23 15:06:20 ERROR SqlExceptionHelper:146 - ERROR: column flower0_.id does not exist
  Position: 8
2020-12-23 15:06:20 ERROR $Proxy34:26 - could not extract ResultSet; SQL [n/a]; nested exception is org.hibernate.exception.SQLGrammarException: could not extract ResultSet
2020-12-23 15:06:20 WARN  $Proxy34:27 - [org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:279), org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:253), org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:527), org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61), org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242), org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:153), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186), org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:131), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186), org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186), org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212), com.sun.proxy.$Proxy34.findAll(Unknown Source), sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method), sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62), sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43), java.lang.reflect.Method.invoke(Method.java:498), org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343), org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163), org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88), com.revature.aspects.LoggingAspect.log(LoggingAspect.java:24), sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method), sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62), sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43), java.lang.reflect.Method.invoke(Method.java:498), org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644), org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633), org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186), org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186), org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212), com.sun.proxy.$Proxy36.findAll(Unknown Source), com.revature.services.FlowerService.getAll(FlowerService.java:32), com.revature.services.FlowerService$$FastClassBySpringCGLIB$$ed5f9599.invoke(<generated>), org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218), org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163), org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88), com.revature.aspects.LoggingAspect.log(LoggingAspect.java:24), sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method), sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62), sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43), java.lang.reflect.Method.invoke(Method.java:498), org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644), org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633), org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186), org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:294), org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186), org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186), org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688), com.revature.services.FlowerService$$EnhancerBySpringCGLIB$$3ec92d5c.getAll(<generated>), com.revature.driver.FlowerDriver.main(FlowerDriver.java:18)]
2020-12-23 15:06:20 ERROR $Proxy34:26 - could not extract ResultSet; SQL [n/a]; nested exception is org.hibernate.exception.SQLGrammarException: could not extract ResultSet
2020-12-23 15:06:20 WARN  $Proxy34:27 - [org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:279), org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:253), org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:527), org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61), org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242), org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:153), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186), org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:131), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186), org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186), org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212), com.sun.proxy.$Proxy34.findAll(Unknown Source), sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method), sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62), sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43), java.lang.reflect.Method.invoke(Method.java:498), org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343), org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163), org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88), com.revature.aspects.LoggingAspect.log(LoggingAspect.java:24), sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method), sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62), sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43), java.lang.reflect.Method.invoke(Method.java:498), org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644), org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633), org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186), org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186), org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212), com.sun.proxy.$Proxy36.findAll(Unknown Source), com.revature.services.FlowerService.getAll(FlowerService.java:32), com.revature.services.FlowerService$$FastClassBySpringCGLIB$$ed5f9599.invoke(<generated>), org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218), org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163), org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88), com.revature.aspects.LoggingAspect.log(LoggingAspect.java:24), sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method), sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62), sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43), java.lang.reflect.Method.invoke(Method.java:498), org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644), org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633), org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186), org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:294), org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186), org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186), org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688), com.revature.services.FlowerService$$EnhancerBySpringCGLIB$$3ec92d5c.getAll(<generated>), com.revature.driver.FlowerDriver.main(FlowerDriver.java:18)]
2020-12-23 15:07:35 DEBUG logging:55 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-12-23 15:07:35 INFO  LogHelper:46 - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-12-23 15:07:35 INFO  Version:54 - HHH000412: Hibernate Core {4.3.11.Final}
2020-12-23 15:07:35 INFO  Environment:239 - HHH000206: hibernate.properties not found
2020-12-23 15:07:35 INFO  Environment:346 - HHH000021: Bytecode provider name : javassist
2020-12-23 15:07:35 INFO  Version:66 - HCANN000001: Hibernate Commons Annotations {4.0.5.Final}
2020-12-23 15:07:37 INFO  Dialect:145 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2020-12-23 15:07:37 INFO  LobCreatorBuilder:123 - HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
2020-12-23 15:07:37 INFO  ASTQueryTranslatorFactory:47 - HHH000397: Using ASTQueryTranslatorFactory
2020-12-23 15:07:39 TRACE FlowerService:21 - Method with signature: List com.revature.services.FlowerService.getAll()
2020-12-23 15:07:39 TRACE FlowerService:22 - with arguments: []
2020-12-23 15:07:39 TRACE $Proxy34:21 - Method with signature: List org.springframework.data.jpa.repository.JpaRepository.findAll()
2020-12-23 15:07:39 TRACE $Proxy34:22 - with arguments: []
2020-12-23 15:07:44 TRACE $Proxy34:30 - List org.springframework.data.jpa.repository.JpaRepository.findAll() returned: [Flower [id=1, name=rose, currentPrice=5.99], Flower [id=2, name=daisy, currentPrice=5.25], Flower [id=3, name=sunflower, currentPrice=6.99], Flower [id=4, name=hibiscus, currentPrice=9.89], Flower [id=5, name=peony, currentPrice=7.49]]
2020-12-23 15:07:44 TRACE $Proxy34:30 - List com.revature.services.FlowerService.getAll() returned: [Flower [id=1, name=rose, currentPrice=5.99], Flower [id=2, name=daisy, currentPrice=5.25], Flower [id=3, name=sunflower, currentPrice=6.99], Flower [id=4, name=hibiscus, currentPrice=9.89], Flower [id=5, name=peony, currentPrice=7.49]]
2020-12-23 15:07:44 TRACE FlowerService:21 - Method with signature: void com.revature.services.FlowerService.addFlower(Flower)
2020-12-23 15:07:44 TRACE FlowerService:22 - with arguments: [Flower [id=null, name=Tulip, currentPrice=2.99]]
2020-12-23 15:07:44 TRACE $Proxy34:21 - Method with signature: Object org.springframework.data.repository.CrudRepository.save(Object)
2020-12-23 15:07:44 TRACE $Proxy34:22 - with arguments: [Flower [id=null, name=Tulip, currentPrice=2.99]]
2020-12-23 15:07:44 WARN  SqlExceptionHelper:144 - SQL Error: 0, SQLState: 42804
2020-12-23 15:07:44 ERROR SqlExceptionHelper:146 - ERROR: column "current_price" is of type money but expression is of type double precision
  Hint: You will need to rewrite or cast the expression.
  Position: 50
2020-12-23 15:07:44 ERROR $Proxy34:26 - could not execute statement; SQL [n/a]; nested exception is org.hibernate.exception.SQLGrammarException: could not execute statement
2020-12-23 15:07:44 WARN  $Proxy34:27 - [org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:279), org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:253), org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:527), org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61), org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242), org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:153), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186), org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:131), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186), org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186), org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212), com.sun.proxy.$Proxy34.save(Unknown Source), sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method), sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62), sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43), java.lang.reflect.Method.invoke(Method.java:498), org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343), org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163), org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88), com.revature.aspects.LoggingAspect.log(LoggingAspect.java:24), sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method), sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62), sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43), java.lang.reflect.Method.invoke(Method.java:498), org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644), org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633), org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186), org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186), org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212), com.sun.proxy.$Proxy36.save(Unknown Source), com.revature.services.FlowerService.addFlower(FlowerService.java:37), com.revature.services.FlowerService$$FastClassBySpringCGLIB$$ed5f9599.invoke(<generated>), org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218), org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163), org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88), com.revature.aspects.LoggingAspect.log(LoggingAspect.java:24), sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method), sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62), sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43), java.lang.reflect.Method.invoke(Method.java:498), org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644), org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633), org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186), org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:294), org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186), org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186), org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688), com.revature.services.FlowerService$$EnhancerBySpringCGLIB$$3ec92d5c.addFlower(<generated>), com.revature.driver.FlowerDriver.main(FlowerDriver.java:23)]
2020-12-23 15:07:44 ERROR $Proxy34:26 - could not execute statement; SQL [n/a]; nested exception is org.hibernate.exception.SQLGrammarException: could not execute statement
2020-12-23 15:07:44 WARN  $Proxy34:27 - [org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:279), org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:253), org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:527), org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61), org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242), org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:153), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186), org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:131), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186), org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186), org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212), com.sun.proxy.$Proxy34.save(Unknown Source), sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method), sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62), sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43), java.lang.reflect.Method.invoke(Method.java:498), org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343), org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163), org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88), com.revature.aspects.LoggingAspect.log(LoggingAspect.java:24), sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method), sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62), sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43), java.lang.reflect.Method.invoke(Method.java:498), org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644), org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633), org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186), org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186), org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212), com.sun.proxy.$Proxy36.save(Unknown Source), com.revature.services.FlowerService.addFlower(FlowerService.java:37), com.revature.services.FlowerService$$FastClassBySpringCGLIB$$ed5f9599.invoke(<generated>), org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218), org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163), org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88), com.revature.aspects.LoggingAspect.log(LoggingAspect.java:24), sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method), sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62), sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43), java.lang.reflect.Method.invoke(Method.java:498), org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644), org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633), org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186), org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:294), org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186), org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186), org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688), com.revature.services.FlowerService$$EnhancerBySpringCGLIB$$3ec92d5c.addFlower(<generated>), com.revature.driver.FlowerDriver.main(FlowerDriver.java:23)]
2020-12-23 15:08:36 DEBUG logging:55 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-12-23 15:08:37 INFO  LogHelper:46 - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-12-23 15:08:37 INFO  Version:54 - HHH000412: Hibernate Core {4.3.11.Final}
2020-12-23 15:08:37 INFO  Environment:239 - HHH000206: hibernate.properties not found
2020-12-23 15:08:37 INFO  Environment:346 - HHH000021: Bytecode provider name : javassist
2020-12-23 15:08:37 INFO  Version:66 - HCANN000001: Hibernate Commons Annotations {4.0.5.Final}
2020-12-23 15:08:39 INFO  Dialect:145 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2020-12-23 15:08:39 INFO  LobCreatorBuilder:123 - HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
2020-12-23 15:08:39 INFO  ASTQueryTranslatorFactory:47 - HHH000397: Using ASTQueryTranslatorFactory
2020-12-23 15:08:41 TRACE FlowerService:21 - Method with signature: List com.revature.services.FlowerService.getAll()
2020-12-23 15:08:41 TRACE FlowerService:22 - with arguments: []
2020-12-23 15:08:41 TRACE $Proxy34:21 - Method with signature: List org.springframework.data.jpa.repository.JpaRepository.findAll()
2020-12-23 15:08:41 TRACE $Proxy34:22 - with arguments: []
2020-12-23 15:08:42 TRACE $Proxy34:30 - List org.springframework.data.jpa.repository.JpaRepository.findAll() returned: [Flower [id=1, name=rose, currentPrice=$5.99], Flower [id=2, name=daisy, currentPrice=$5.25], Flower [id=3, name=sunflower, currentPrice=$6.99], Flower [id=4, name=hibiscus, currentPrice=$9.89], Flower [id=5, name=peony, currentPrice=$7.49]]
2020-12-23 15:08:42 TRACE $Proxy34:30 - List com.revature.services.FlowerService.getAll() returned: [Flower [id=1, name=rose, currentPrice=$5.99], Flower [id=2, name=daisy, currentPrice=$5.25], Flower [id=3, name=sunflower, currentPrice=$6.99], Flower [id=4, name=hibiscus, currentPrice=$9.89], Flower [id=5, name=peony, currentPrice=$7.49]]
2020-12-23 15:08:42 TRACE FlowerService:21 - Method with signature: void com.revature.services.FlowerService.addFlower(Flower)
2020-12-23 15:08:42 TRACE FlowerService:22 - with arguments: [Flower [id=null, name=Tulip, currentPrice=2.99]]
2020-12-23 15:08:42 TRACE $Proxy34:21 - Method with signature: Object org.springframework.data.repository.CrudRepository.save(Object)
2020-12-23 15:08:42 TRACE $Proxy34:22 - with arguments: [Flower [id=null, name=Tulip, currentPrice=2.99]]
2020-12-23 15:08:42 WARN  SqlExceptionHelper:144 - SQL Error: 0, SQLState: 42804
2020-12-23 15:08:42 ERROR SqlExceptionHelper:146 - ERROR: column "current_price" is of type money but expression is of type character varying
  Hint: You will need to rewrite or cast the expression.
  Position: 50
2020-12-23 15:08:42 ERROR $Proxy34:26 - could not execute statement; SQL [n/a]; nested exception is org.hibernate.exception.SQLGrammarException: could not execute statement
2020-12-23 15:08:42 WARN  $Proxy34:27 - [org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:279), org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:253), org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:527), org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61), org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242), org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:153), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186), org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:131), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186), org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186), org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212), com.sun.proxy.$Proxy34.save(Unknown Source), sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method), sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62), sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43), java.lang.reflect.Method.invoke(Method.java:498), org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343), org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163), org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88), com.revature.aspects.LoggingAspect.log(LoggingAspect.java:24), sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method), sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62), sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43), java.lang.reflect.Method.invoke(Method.java:498), org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644), org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633), org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186), org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186), org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212), com.sun.proxy.$Proxy36.save(Unknown Source), com.revature.services.FlowerService.addFlower(FlowerService.java:37), com.revature.services.FlowerService$$FastClassBySpringCGLIB$$ed5f9599.invoke(<generated>), org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218), org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163), org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88), com.revature.aspects.LoggingAspect.log(LoggingAspect.java:24), sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method), sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62), sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43), java.lang.reflect.Method.invoke(Method.java:498), org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644), org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633), org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186), org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:294), org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186), org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186), org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688), com.revature.services.FlowerService$$EnhancerBySpringCGLIB$$3ec92d5c.addFlower(<generated>), com.revature.driver.FlowerDriver.main(FlowerDriver.java:23)]
2020-12-23 15:08:42 ERROR $Proxy34:26 - could not execute statement; SQL [n/a]; nested exception is org.hibernate.exception.SQLGrammarException: could not execute statement
2020-12-23 15:08:42 WARN  $Proxy34:27 - [org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:279), org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:253), org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:527), org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61), org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242), org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:153), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186), org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:131), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186), org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186), org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212), com.sun.proxy.$Proxy34.save(Unknown Source), sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method), sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62), sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43), java.lang.reflect.Method.invoke(Method.java:498), org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343), org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163), org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88), com.revature.aspects.LoggingAspect.log(LoggingAspect.java:24), sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method), sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62), sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43), java.lang.reflect.Method.invoke(Method.java:498), org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644), org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633), org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186), org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186), org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212), com.sun.proxy.$Proxy36.save(Unknown Source), com.revature.services.FlowerService.addFlower(FlowerService.java:37), com.revature.services.FlowerService$$FastClassBySpringCGLIB$$ed5f9599.invoke(<generated>), org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218), org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163), org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88), com.revature.aspects.LoggingAspect.log(LoggingAspect.java:24), sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method), sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62), sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43), java.lang.reflect.Method.invoke(Method.java:498), org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644), org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633), org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186), org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:294), org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186), org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186), org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688), com.revature.services.FlowerService$$EnhancerBySpringCGLIB$$3ec92d5c.addFlower(<generated>), com.revature.driver.FlowerDriver.main(FlowerDriver.java:23)]
2020-12-23 15:11:29 DEBUG logging:55 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-12-23 15:11:29 INFO  LogHelper:46 - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-12-23 15:11:30 INFO  Version:54 - HHH000412: Hibernate Core {4.3.11.Final}
2020-12-23 15:11:30 INFO  Environment:239 - HHH000206: hibernate.properties not found
2020-12-23 15:11:30 INFO  Environment:346 - HHH000021: Bytecode provider name : javassist
2020-12-23 15:11:30 INFO  Version:66 - HCANN000001: Hibernate Commons Annotations {4.0.5.Final}
2020-12-23 15:11:32 INFO  Dialect:145 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2020-12-23 15:11:32 INFO  LobCreatorBuilder:123 - HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
2020-12-23 15:11:32 INFO  ASTQueryTranslatorFactory:47 - HHH000397: Using ASTQueryTranslatorFactory
2020-12-23 15:11:34 TRACE FlowerService:21 - Method with signature: List com.revature.services.FlowerService.getAll()
2020-12-23 15:11:34 TRACE FlowerService:22 - with arguments: []
2020-12-23 15:11:34 TRACE $Proxy34:21 - Method with signature: List org.springframework.data.jpa.repository.JpaRepository.findAll()
2020-12-23 15:11:34 TRACE $Proxy34:22 - with arguments: []
2020-12-23 15:11:34 TRACE $Proxy34:30 - List org.springframework.data.jpa.repository.JpaRepository.findAll() returned: [Flower [id=1, name=rose, currentPrice=5.99], Flower [id=2, name=daisy, currentPrice=5.25], Flower [id=3, name=sunflower, currentPrice=6.99], Flower [id=4, name=hibiscus, currentPrice=9.89], Flower [id=5, name=peony, currentPrice=7.49]]
2020-12-23 15:11:34 TRACE $Proxy34:30 - List com.revature.services.FlowerService.getAll() returned: [Flower [id=1, name=rose, currentPrice=5.99], Flower [id=2, name=daisy, currentPrice=5.25], Flower [id=3, name=sunflower, currentPrice=6.99], Flower [id=4, name=hibiscus, currentPrice=9.89], Flower [id=5, name=peony, currentPrice=7.49]]
2020-12-23 15:11:34 TRACE FlowerService:21 - Method with signature: void com.revature.services.FlowerService.addFlower(Flower)
2020-12-23 15:11:34 TRACE FlowerService:22 - with arguments: [Flower [id=null, name=Tulip, currentPrice=2.99]]
2020-12-23 15:11:34 TRACE $Proxy34:21 - Method with signature: Object org.springframework.data.repository.CrudRepository.save(Object)
2020-12-23 15:11:34 TRACE $Proxy34:22 - with arguments: [Flower [id=null, name=Tulip, currentPrice=2.99]]
2020-12-23 15:11:34 TRACE $Proxy34:30 - Object org.springframework.data.repository.CrudRepository.save(Object) returned: Flower [id=7, name=Tulip, currentPrice=2.99]
2020-12-23 15:11:34 TRACE $Proxy34:30 - void com.revature.services.FlowerService.addFlower(Flower) returned: null
2020-12-23 15:11:34 TRACE FlowerService:21 - Method with signature: List com.revature.services.FlowerService.getAll()
2020-12-23 15:11:34 TRACE FlowerService:22 - with arguments: []
2020-12-23 15:11:34 TRACE $Proxy34:21 - Method with signature: List org.springframework.data.jpa.repository.JpaRepository.findAll()
2020-12-23 15:11:34 TRACE $Proxy34:22 - with arguments: []
2020-12-23 15:11:34 TRACE $Proxy34:30 - List org.springframework.data.jpa.repository.JpaRepository.findAll() returned: [Flower [id=1, name=rose, currentPrice=5.99], Flower [id=2, name=daisy, currentPrice=5.25], Flower [id=3, name=sunflower, currentPrice=6.99], Flower [id=4, name=hibiscus, currentPrice=9.89], Flower [id=5, name=peony, currentPrice=7.49], Flower [id=7, name=Tulip, currentPrice=2.99]]
2020-12-23 15:11:34 TRACE $Proxy34:30 - List com.revature.services.FlowerService.getAll() returned: [Flower [id=1, name=rose, currentPrice=5.99], Flower [id=2, name=daisy, currentPrice=5.25], Flower [id=3, name=sunflower, currentPrice=6.99], Flower [id=4, name=hibiscus, currentPrice=9.89], Flower [id=5, name=peony, currentPrice=7.49], Flower [id=7, name=Tulip, currentPrice=2.99]]
2020-12-23 15:11:34 TRACE FlowerService:21 - Method with signature: Flower com.revature.services.FlowerService.getFlower(Integer)
2020-12-23 15:11:34 TRACE FlowerService:22 - with arguments: [1]
2020-12-23 15:11:34 TRACE $Proxy34:21 - Method with signature: Object org.springframework.data.repository.CrudRepository.findOne(Serializable)
2020-12-23 15:11:34 TRACE $Proxy34:22 - with arguments: [1]
2020-12-23 15:11:34 TRACE $Proxy34:30 - Object org.springframework.data.repository.CrudRepository.findOne(Serializable) returned: Flower [id=1, name=rose, currentPrice=5.99]
2020-12-23 15:11:34 TRACE $Proxy34:30 - Flower com.revature.services.FlowerService.getFlower(Integer) returned: Flower [id=1, name=rose, currentPrice=5.99]
2020-12-23 15:11:34 TRACE PurchaseService:21 - Method with signature: Set com.revature.services.PurchaseService.getPurchasesByFlower(Flower)
2020-12-23 15:11:34 TRACE PurchaseService:22 - with arguments: [Flower [id=1, name=rose, currentPrice=5.99]]
2020-12-23 15:11:34 TRACE $Proxy37:21 - Method with signature: Set com.revature.data.PurchaseRepository.findByFlower(Flower)
2020-12-23 15:11:34 TRACE $Proxy37:22 - with arguments: [Flower [id=1, name=rose, currentPrice=5.99]]
2020-12-23 15:11:35 TRACE $Proxy37:30 - Set com.revature.data.PurchaseRepository.findByFlower(Flower) returned: [Purchase [id=1, flower=Flower [id=1, name=rose, currentPrice=5.99], price=6.99], Purchase [id=2, flower=Flower [id=1, name=rose, currentPrice=5.99], price=4.99]]
2020-12-23 15:11:35 TRACE $Proxy37:30 - Set com.revature.services.PurchaseService.getPurchasesByFlower(Flower) returned: [Purchase [id=1, flower=Flower [id=1, name=rose, currentPrice=5.99], price=6.99], Purchase [id=2, flower=Flower [id=1, name=rose, currentPrice=5.99], price=4.99]]
2020-12-23 15:11:35 TRACE FlowerService:21 - Method with signature: void com.revature.services.FlowerService.throwExceptionFlower(String)
2020-12-23 15:11:35 TRACE FlowerService:22 - with arguments: [null]
2020-12-23 15:11:35 ERROR FlowerService:26 - 
2020-12-23 15:11:35 WARN  FlowerService:27 - [com.revature.services.FlowerService.throwExceptionFlower(FlowerService.java:41), com.revature.services.FlowerService$$FastClassBySpringCGLIB$$ed5f9599.invoke(<generated>), org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218), org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163), org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88), com.revature.aspects.LoggingAspect.log(LoggingAspect.java:24), sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method), sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62), sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43), java.lang.reflect.Method.invoke(Method.java:498), org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644), org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633), org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186), org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:294), org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186), org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186), org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688), com.revature.services.FlowerService$$EnhancerBySpringCGLIB$$3ec92d5c.throwExceptionFlower(<generated>), com.revature.driver.FlowerDriver.main(FlowerDriver.java:28)]
2020-12-23 15:12:02 DEBUG logging:55 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-12-23 15:12:02 INFO  LogHelper:46 - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-12-23 15:12:02 INFO  Version:54 - HHH000412: Hibernate Core {4.3.11.Final}
2020-12-23 15:12:02 INFO  Environment:239 - HHH000206: hibernate.properties not found
2020-12-23 15:12:02 INFO  Environment:346 - HHH000021: Bytecode provider name : javassist
2020-12-23 15:12:02 INFO  Version:66 - HCANN000001: Hibernate Commons Annotations {4.0.5.Final}
2020-12-23 15:12:04 INFO  Dialect:145 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2020-12-23 15:12:04 INFO  LobCreatorBuilder:123 - HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
2020-12-23 15:12:04 INFO  ASTQueryTranslatorFactory:47 - HHH000397: Using ASTQueryTranslatorFactory
2020-12-23 15:12:06 TRACE FlowerService:21 - Method with signature: List com.revature.services.FlowerService.getAll()
2020-12-23 15:12:06 TRACE FlowerService:22 - with arguments: []
2020-12-23 15:12:06 TRACE $Proxy34:21 - Method with signature: List org.springframework.data.jpa.repository.JpaRepository.findAll()
2020-12-23 15:12:06 TRACE $Proxy34:22 - with arguments: []
2020-12-23 15:12:07 TRACE $Proxy34:30 - List org.springframework.data.jpa.repository.JpaRepository.findAll() returned: [Flower [id=1, name=rose, currentPrice=5.99], Flower [id=2, name=daisy, currentPrice=5.25], Flower [id=3, name=sunflower, currentPrice=6.99], Flower [id=4, name=hibiscus, currentPrice=9.89], Flower [id=5, name=peony, currentPrice=7.49], Flower [id=7, name=Tulip, currentPrice=2.99]]
2020-12-23 15:12:07 TRACE $Proxy34:30 - List com.revature.services.FlowerService.getAll() returned: [Flower [id=1, name=rose, currentPrice=5.99], Flower [id=2, name=daisy, currentPrice=5.25], Flower [id=3, name=sunflower, currentPrice=6.99], Flower [id=4, name=hibiscus, currentPrice=9.89], Flower [id=5, name=peony, currentPrice=7.49], Flower [id=7, name=Tulip, currentPrice=2.99]]
2020-12-23 15:12:07 TRACE FlowerService:21 - Method with signature: void com.revature.services.FlowerService.addFlower(Flower)
2020-12-23 15:12:07 TRACE FlowerService:22 - with arguments: [Flower [id=null, name=Tulip, currentPrice=2.99]]
2020-12-23 15:12:07 TRACE $Proxy34:21 - Method with signature: Object org.springframework.data.repository.CrudRepository.save(Object)
2020-12-23 15:12:07 TRACE $Proxy34:22 - with arguments: [Flower [id=null, name=Tulip, currentPrice=2.99]]
2020-12-23 15:12:07 WARN  SqlExceptionHelper:144 - SQL Error: 0, SQLState: 23505
2020-12-23 15:12:07 ERROR SqlExceptionHelper:146 - ERROR: duplicate key value violates unique constraint "flower_name_key"
  Detail: Key (name)=(Tulip) already exists.
2020-12-23 15:12:07 ERROR $Proxy34:26 - could not execute statement; SQL [n/a]; constraint [flower_name_key]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement
2020-12-23 15:12:07 WARN  $Proxy34:27 - [org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:296), org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:253), org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:527), org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61), org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242), org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:153), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186), org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:131), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186), org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186), org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212), com.sun.proxy.$Proxy34.save(Unknown Source), sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method), sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62), sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43), java.lang.reflect.Method.invoke(Method.java:498), org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343), org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163), org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88), com.revature.aspects.LoggingAspect.log(LoggingAspect.java:24), sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method), sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62), sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43), java.lang.reflect.Method.invoke(Method.java:498), org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644), org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633), org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186), org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186), org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212), com.sun.proxy.$Proxy36.save(Unknown Source), com.revature.services.FlowerService.addFlower(FlowerService.java:37), com.revature.services.FlowerService$$FastClassBySpringCGLIB$$ed5f9599.invoke(<generated>), org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218), org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163), org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88), com.revature.aspects.LoggingAspect.log(LoggingAspect.java:24), sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method), sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62), sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43), java.lang.reflect.Method.invoke(Method.java:498), org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644), org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633), org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186), org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:294), org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186), org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186), org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688), com.revature.services.FlowerService$$EnhancerBySpringCGLIB$$3ec92d5c.addFlower(<generated>), com.revature.driver.FlowerDriver.main(FlowerDriver.java:23)]
2020-12-23 15:12:07 ERROR $Proxy34:26 - could not execute statement; SQL [n/a]; constraint [flower_name_key]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement
2020-12-23 15:12:07 WARN  $Proxy34:27 - [org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:296), org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:253), org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:527), org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61), org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242), org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:153), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186), org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:131), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186), org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186), org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212), com.sun.proxy.$Proxy34.save(Unknown Source), sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method), sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62), sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43), java.lang.reflect.Method.invoke(Method.java:498), org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343), org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163), org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88), com.revature.aspects.LoggingAspect.log(LoggingAspect.java:24), sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method), sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62), sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43), java.lang.reflect.Method.invoke(Method.java:498), org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644), org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633), org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186), org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186), org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212), com.sun.proxy.$Proxy36.save(Unknown Source), com.revature.services.FlowerService.addFlower(FlowerService.java:37), com.revature.services.FlowerService$$FastClassBySpringCGLIB$$ed5f9599.invoke(<generated>), org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218), org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163), org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88), com.revature.aspects.LoggingAspect.log(LoggingAspect.java:24), sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method), sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62), sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43), java.lang.reflect.Method.invoke(Method.java:498), org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644), org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633), org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186), org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:294), org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186), org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186), org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688), com.revature.services.FlowerService$$EnhancerBySpringCGLIB$$3ec92d5c.addFlower(<generated>), com.revature.driver.FlowerDriver.main(FlowerDriver.java:23)]
2020-12-23 15:12:42 DEBUG logging:55 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-12-23 15:12:42 INFO  LogHelper:46 - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-12-23 15:12:43 INFO  Version:54 - HHH000412: Hibernate Core {4.3.11.Final}
2020-12-23 15:12:43 INFO  Environment:239 - HHH000206: hibernate.properties not found
2020-12-23 15:12:43 INFO  Environment:346 - HHH000021: Bytecode provider name : javassist
2020-12-23 15:12:43 INFO  Version:66 - HCANN000001: Hibernate Commons Annotations {4.0.5.Final}
2020-12-23 15:12:45 INFO  Dialect:145 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2020-12-23 15:12:45 INFO  LobCreatorBuilder:123 - HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
2020-12-23 15:12:45 INFO  ASTQueryTranslatorFactory:47 - HHH000397: Using ASTQueryTranslatorFactory
2020-12-23 15:12:47 TRACE FlowerService:21 - Method with signature: List com.revature.services.FlowerService.getAll()
2020-12-23 15:12:47 TRACE FlowerService:22 - with arguments: []
2020-12-23 15:12:47 TRACE $Proxy34:21 - Method with signature: List org.springframework.data.jpa.repository.JpaRepository.findAll()
2020-12-23 15:12:47 TRACE $Proxy34:22 - with arguments: []
2020-12-23 15:12:48 TRACE $Proxy34:30 - List org.springframework.data.jpa.repository.JpaRepository.findAll() returned: [Flower [id=1, name=rose, currentPrice=5.99], Flower [id=2, name=daisy, currentPrice=5.25], Flower [id=3, name=sunflower, currentPrice=6.99], Flower [id=4, name=hibiscus, currentPrice=9.89], Flower [id=5, name=peony, currentPrice=7.49], Flower [id=7, name=Tulip, currentPrice=2.99]]
2020-12-23 15:12:48 TRACE $Proxy34:30 - List com.revature.services.FlowerService.getAll() returned: [Flower [id=1, name=rose, currentPrice=5.99], Flower [id=2, name=daisy, currentPrice=5.25], Flower [id=3, name=sunflower, currentPrice=6.99], Flower [id=4, name=hibiscus, currentPrice=9.89], Flower [id=5, name=peony, currentPrice=7.49], Flower [id=7, name=Tulip, currentPrice=2.99]]
2020-12-23 15:12:48 TRACE FlowerService:21 - Method with signature: void com.revature.services.FlowerService.addFlower(Flower)
2020-12-23 15:12:48 TRACE FlowerService:22 - with arguments: [Flower [id=null, name=echinacea, currentPrice=2.99]]
2020-12-23 15:12:48 TRACE $Proxy34:21 - Method with signature: Object org.springframework.data.repository.CrudRepository.save(Object)
2020-12-23 15:12:48 TRACE $Proxy34:22 - with arguments: [Flower [id=null, name=echinacea, currentPrice=2.99]]
2020-12-23 15:12:48 TRACE $Proxy34:30 - Object org.springframework.data.repository.CrudRepository.save(Object) returned: Flower [id=9, name=echinacea, currentPrice=2.99]
2020-12-23 15:12:48 TRACE $Proxy34:30 - void com.revature.services.FlowerService.addFlower(Flower) returned: null
2020-12-23 15:12:48 TRACE FlowerService:21 - Method with signature: List com.revature.services.FlowerService.getAll()
2020-12-23 15:12:48 TRACE FlowerService:22 - with arguments: []
2020-12-23 15:12:48 TRACE $Proxy34:21 - Method with signature: List org.springframework.data.jpa.repository.JpaRepository.findAll()
2020-12-23 15:12:48 TRACE $Proxy34:22 - with arguments: []
2020-12-23 15:12:48 TRACE $Proxy34:30 - List org.springframework.data.jpa.repository.JpaRepository.findAll() returned: [Flower [id=1, name=rose, currentPrice=5.99], Flower [id=2, name=daisy, currentPrice=5.25], Flower [id=3, name=sunflower, currentPrice=6.99], Flower [id=4, name=hibiscus, currentPrice=9.89], Flower [id=5, name=peony, currentPrice=7.49], Flower [id=7, name=Tulip, currentPrice=2.99], Flower [id=9, name=echinacea, currentPrice=2.99]]
2020-12-23 15:12:48 TRACE $Proxy34:30 - List com.revature.services.FlowerService.getAll() returned: [Flower [id=1, name=rose, currentPrice=5.99], Flower [id=2, name=daisy, currentPrice=5.25], Flower [id=3, name=sunflower, currentPrice=6.99], Flower [id=4, name=hibiscus, currentPrice=9.89], Flower [id=5, name=peony, currentPrice=7.49], Flower [id=7, name=Tulip, currentPrice=2.99], Flower [id=9, name=echinacea, currentPrice=2.99]]
2020-12-23 15:12:48 TRACE FlowerService:21 - Method with signature: Flower com.revature.services.FlowerService.getFlower(Integer)
2020-12-23 15:12:48 TRACE FlowerService:22 - with arguments: [1]
2020-12-23 15:12:48 TRACE $Proxy34:21 - Method with signature: Object org.springframework.data.repository.CrudRepository.findOne(Serializable)
2020-12-23 15:12:48 TRACE $Proxy34:22 - with arguments: [1]
2020-12-23 15:12:48 TRACE $Proxy34:30 - Object org.springframework.data.repository.CrudRepository.findOne(Serializable) returned: Flower [id=1, name=rose, currentPrice=5.99]
2020-12-23 15:12:48 TRACE $Proxy34:30 - Flower com.revature.services.FlowerService.getFlower(Integer) returned: Flower [id=1, name=rose, currentPrice=5.99]
2020-12-23 15:12:48 TRACE PurchaseService:21 - Method with signature: Set com.revature.services.PurchaseService.getPurchasesByFlower(Flower)
2020-12-23 15:12:48 TRACE PurchaseService:22 - with arguments: [Flower [id=1, name=rose, currentPrice=5.99]]
2020-12-23 15:12:48 TRACE $Proxy37:21 - Method with signature: Set com.revature.data.PurchaseRepository.findByFlower(Flower)
2020-12-23 15:12:48 TRACE $Proxy37:22 - with arguments: [Flower [id=1, name=rose, currentPrice=5.99]]
2020-12-23 15:12:48 TRACE $Proxy37:30 - Set com.revature.data.PurchaseRepository.findByFlower(Flower) returned: [Purchase [id=1, flower=Flower [id=1, name=rose, currentPrice=5.99], price=6.99], Purchase [id=2, flower=Flower [id=1, name=rose, currentPrice=5.99], price=4.99]]
2020-12-23 15:12:48 TRACE $Proxy37:30 - Set com.revature.services.PurchaseService.getPurchasesByFlower(Flower) returned: [Purchase [id=1, flower=Flower [id=1, name=rose, currentPrice=5.99], price=6.99], Purchase [id=2, flower=Flower [id=1, name=rose, currentPrice=5.99], price=4.99]]
2020-12-23 17:03:36 DEBUG logging:55 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-12-23 17:03:36 INFO  LogHelper:46 - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-12-23 17:03:36 INFO  Version:54 - HHH000412: Hibernate Core {4.3.11.Final}
2020-12-23 17:03:36 INFO  Environment:239 - HHH000206: hibernate.properties not found
2020-12-23 17:03:36 INFO  Environment:346 - HHH000021: Bytecode provider name : javassist
2020-12-23 17:03:36 INFO  Version:66 - HCANN000001: Hibernate Commons Annotations {4.0.5.Final}
2020-12-23 17:03:39 INFO  Dialect:145 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2020-12-23 17:03:39 INFO  LobCreatorBuilder:123 - HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
2020-12-23 17:03:39 INFO  ASTQueryTranslatorFactory:47 - HHH000397: Using ASTQueryTranslatorFactory
2020-12-23 17:03:41 WARN  SqlExceptionHelper:144 - SQL Error: 0, SQLState: 23505
2020-12-23 17:03:41 ERROR SqlExceptionHelper:146 - ERROR: duplicate key value violates unique constraint "flower_name_key"
  Detail: Key (name)=(echinacea) already exists.
2020-12-23 17:05:20 DEBUG logging:55 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-12-23 17:05:20 INFO  LogHelper:46 - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-12-23 17:05:20 INFO  Version:54 - HHH000412: Hibernate Core {4.3.11.Final}
2020-12-23 17:05:20 INFO  Environment:239 - HHH000206: hibernate.properties not found
2020-12-23 17:05:20 INFO  Environment:346 - HHH000021: Bytecode provider name : javassist
2020-12-23 17:05:20 INFO  Version:66 - HCANN000001: Hibernate Commons Annotations {4.0.5.Final}
2020-12-23 17:05:22 INFO  Dialect:145 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2020-12-23 17:05:22 INFO  LobCreatorBuilder:123 - HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
2020-12-23 17:05:22 INFO  ASTQueryTranslatorFactory:47 - HHH000397: Using ASTQueryTranslatorFactory
2020-12-23 17:12:44 DEBUG logging:55 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-12-23 17:12:44 INFO  LogHelper:46 - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-12-23 17:12:44 INFO  Version:54 - HHH000412: Hibernate Core {4.3.11.Final}
2020-12-23 17:12:44 INFO  Environment:239 - HHH000206: hibernate.properties not found
2020-12-23 17:12:44 INFO  Environment:346 - HHH000021: Bytecode provider name : javassist
2020-12-23 17:12:44 INFO  Version:66 - HCANN000001: Hibernate Commons Annotations {4.0.5.Final}
2020-12-23 17:12:46 INFO  Dialect:145 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2020-12-23 17:12:46 INFO  LobCreatorBuilder:123 - HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
2020-12-23 17:12:46 INFO  ASTQueryTranslatorFactory:47 - HHH000397: Using ASTQueryTranslatorFactory
2020-12-23 17:12:48 WARN  SqlExceptionHelper:144 - SQL Error: 0, SQLState: 23505
2020-12-23 17:12:48 ERROR SqlExceptionHelper:146 - ERROR: duplicate key value violates unique constraint "flower_name_key"
  Detail: Key (name)=(a) already exists.
2020-12-23 17:14:27 DEBUG logging:55 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-12-23 17:14:27 INFO  LogHelper:46 - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-12-23 17:14:28 INFO  Version:54 - HHH000412: Hibernate Core {4.3.11.Final}
2020-12-23 17:14:28 INFO  Environment:239 - HHH000206: hibernate.properties not found
2020-12-23 17:14:28 INFO  Environment:346 - HHH000021: Bytecode provider name : javassist
2020-12-23 17:14:28 INFO  Version:66 - HCANN000001: Hibernate Commons Annotations {4.0.5.Final}
2020-12-23 17:14:30 INFO  Dialect:145 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2020-12-23 17:14:30 INFO  LobCreatorBuilder:123 - HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
2020-12-23 17:14:31 INFO  ASTQueryTranslatorFactory:47 - HHH000397: Using ASTQueryTranslatorFactory
2020-12-23 17:16:05 DEBUG logging:55 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-12-23 17:16:05 INFO  LogHelper:46 - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-12-23 17:16:05 INFO  Version:54 - HHH000412: Hibernate Core {4.3.11.Final}
2020-12-23 17:16:05 INFO  Environment:239 - HHH000206: hibernate.properties not found
2020-12-23 17:16:05 INFO  Environment:346 - HHH000021: Bytecode provider name : javassist
2020-12-23 17:16:05 INFO  Version:66 - HCANN000001: Hibernate Commons Annotations {4.0.5.Final}
2020-12-23 17:16:07 INFO  Dialect:145 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2020-12-23 17:16:07 INFO  LobCreatorBuilder:123 - HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
2020-12-23 17:16:07 INFO  ASTQueryTranslatorFactory:47 - HHH000397: Using ASTQueryTranslatorFactory
2020-12-23 17:17:50 DEBUG logging:55 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-12-23 17:17:50 INFO  LogHelper:46 - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-12-23 17:17:51 INFO  Version:54 - HHH000412: Hibernate Core {4.3.11.Final}
2020-12-23 17:17:51 INFO  Environment:239 - HHH000206: hibernate.properties not found
2020-12-23 17:17:51 INFO  Environment:346 - HHH000021: Bytecode provider name : javassist
2020-12-23 17:17:51 INFO  Version:66 - HCANN000001: Hibernate Commons Annotations {4.0.5.Final}
2020-12-23 17:17:52 INFO  Dialect:145 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2020-12-23 17:17:52 INFO  LobCreatorBuilder:123 - HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
2020-12-23 17:17:53 INFO  ASTQueryTranslatorFactory:47 - HHH000397: Using ASTQueryTranslatorFactory
2020-12-23 17:19:07 DEBUG logging:55 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-12-23 17:19:07 INFO  LogHelper:46 - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-12-23 17:19:07 INFO  Version:54 - HHH000412: Hibernate Core {4.3.11.Final}
2020-12-23 17:19:07 INFO  Environment:239 - HHH000206: hibernate.properties not found
2020-12-23 17:19:07 INFO  Environment:346 - HHH000021: Bytecode provider name : javassist
2020-12-23 17:19:07 INFO  Version:66 - HCANN000001: Hibernate Commons Annotations {4.0.5.Final}
2020-12-23 17:19:10 INFO  Dialect:145 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2020-12-23 17:19:10 INFO  LobCreatorBuilder:123 - HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
2020-12-23 17:19:10 INFO  ASTQueryTranslatorFactory:47 - HHH000397: Using ASTQueryTranslatorFactory
2020-12-23 17:23:06 DEBUG logging:55 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-12-23 17:23:06 INFO  LogHelper:46 - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-12-23 17:23:06 INFO  Version:54 - HHH000412: Hibernate Core {4.3.11.Final}
2020-12-23 17:23:06 INFO  Environment:239 - HHH000206: hibernate.properties not found
2020-12-23 17:23:06 INFO  Environment:346 - HHH000021: Bytecode provider name : javassist
2020-12-23 17:23:07 INFO  Version:66 - HCANN000001: Hibernate Commons Annotations {4.0.5.Final}
2020-12-23 17:23:09 INFO  Dialect:145 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2020-12-23 17:23:10 INFO  LobCreatorBuilder:123 - HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
2020-12-23 17:23:10 INFO  ASTQueryTranslatorFactory:47 - HHH000397: Using ASTQueryTranslatorFactory
2020-12-23 17:24:32 DEBUG logging:55 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-12-23 17:24:33 INFO  LogHelper:46 - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-12-23 17:24:33 INFO  Version:54 - HHH000412: Hibernate Core {4.3.11.Final}
2020-12-23 17:24:33 INFO  Environment:239 - HHH000206: hibernate.properties not found
2020-12-23 17:24:33 INFO  Environment:346 - HHH000021: Bytecode provider name : javassist
2020-12-23 17:24:33 INFO  Version:66 - HCANN000001: Hibernate Commons Annotations {4.0.5.Final}
2020-12-23 17:24:35 INFO  Dialect:145 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2020-12-23 17:24:35 INFO  LobCreatorBuilder:123 - HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
2020-12-23 17:24:35 INFO  ASTQueryTranslatorFactory:47 - HHH000397: Using ASTQueryTranslatorFactory
2020-12-23 17:26:21 DEBUG logging:55 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-12-23 17:26:21 INFO  LogHelper:46 - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-12-23 17:26:21 INFO  Version:54 - HHH000412: Hibernate Core {4.3.11.Final}
2020-12-23 17:26:21 INFO  Environment:239 - HHH000206: hibernate.properties not found
2020-12-23 17:26:21 INFO  Environment:346 - HHH000021: Bytecode provider name : javassist
2020-12-23 17:26:21 INFO  Version:66 - HCANN000001: Hibernate Commons Annotations {4.0.5.Final}
2020-12-23 17:26:22 INFO  Dialect:145 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2020-12-23 17:26:22 INFO  LobCreatorBuilder:123 - HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
2020-12-23 17:26:23 INFO  ASTQueryTranslatorFactory:47 - HHH000397: Using ASTQueryTranslatorFactory
2020-12-23 17:32:41 DEBUG logging:55 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-12-23 17:32:41 INFO  LogHelper:46 - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-12-23 17:32:41 INFO  Version:54 - HHH000412: Hibernate Core {4.3.11.Final}
2020-12-23 17:32:41 INFO  Environment:239 - HHH000206: hibernate.properties not found
2020-12-23 17:32:41 INFO  Environment:346 - HHH000021: Bytecode provider name : javassist
2020-12-23 17:32:41 INFO  Version:66 - HCANN000001: Hibernate Commons Annotations {4.0.5.Final}
2020-12-23 17:32:43 INFO  Dialect:145 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2020-12-23 17:32:43 INFO  LobCreatorBuilder:123 - HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
2020-12-23 17:32:44 INFO  ASTQueryTranslatorFactory:47 - HHH000397: Using ASTQueryTranslatorFactory
2020-12-23 17:32:46 TRACE FlowerService:21 - Method with signature: List com.revature.services.FlowerService.getAll()
2020-12-23 17:32:46 TRACE FlowerService:22 - with arguments: []
2020-12-23 17:32:46 TRACE $Proxy34:21 - Method with signature: List org.springframework.data.jpa.repository.JpaRepository.findAll()
2020-12-23 17:32:46 TRACE $Proxy34:22 - with arguments: []
2020-12-23 17:32:46 TRACE $Proxy34:30 - List org.springframework.data.jpa.repository.JpaRepository.findAll() returned: [Flower [id=1, name=rose, currentPrice=5.99], Flower [id=2, name=daisy, currentPrice=5.25], Flower [id=3, name=sunflower, currentPrice=6.99], Flower [id=4, name=hibiscus, currentPrice=9.89], Flower [id=5, name=peony, currentPrice=7.49], Flower [id=7, name=Tulip, currentPrice=2.99], Flower [id=9, name=echinacea, currentPrice=2.99], Flower [id=11, name=a, currentPrice=2.99], Flower [id=13, name=b, currentPrice=2.99], Flower [id=14, name=c, currentPrice=2.99], Flower [id=15, name=d, currentPrice=2.99], Flower [id=16, name=e, currentPrice=2.99], Flower [id=17, name=g, currentPrice=2.99]]
2020-12-23 17:32:46 TRACE $Proxy34:30 - List com.revature.services.FlowerService.getAll() returned: [Flower [id=1, name=rose, currentPrice=5.99], Flower [id=2, name=daisy, currentPrice=5.25], Flower [id=3, name=sunflower, currentPrice=6.99], Flower [id=4, name=hibiscus, currentPrice=9.89], Flower [id=5, name=peony, currentPrice=7.49], Flower [id=7, name=Tulip, currentPrice=2.99], Flower [id=9, name=echinacea, currentPrice=2.99], Flower [id=11, name=a, currentPrice=2.99], Flower [id=13, name=b, currentPrice=2.99], Flower [id=14, name=c, currentPrice=2.99], Flower [id=15, name=d, currentPrice=2.99], Flower [id=16, name=e, currentPrice=2.99], Flower [id=17, name=g, currentPrice=2.99]]
2020-12-23 17:32:46 TRACE FlowerService:21 - Method with signature: void com.revature.services.FlowerService.addFlower(Flower)
2020-12-23 17:32:46 TRACE FlowerService:22 - with arguments: [Flower [id=null, name=g, currentPrice=2.99]]
2020-12-23 17:32:46 TRACE $Proxy34:21 - Method with signature: Object org.springframework.data.repository.CrudRepository.save(Object)
2020-12-23 17:32:46 TRACE $Proxy34:22 - with arguments: [Flower [id=null, name=g, currentPrice=2.99]]
2020-12-23 17:32:46 WARN  SqlExceptionHelper:144 - SQL Error: 0, SQLState: 23505
2020-12-23 17:32:46 ERROR SqlExceptionHelper:146 - ERROR: duplicate key value violates unique constraint "flower_name_key"
  Detail: Key (name)=(g) already exists.
2020-12-23 17:32:46 ERROR $Proxy34:26 - could not execute statement; SQL [n/a]; constraint [flower_name_key]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement
2020-12-23 17:32:46 WARN  $Proxy34:27 - [org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:296), org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:253), org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:527), org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61), org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242), org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:153), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186), org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:131), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186), org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186), org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212), com.sun.proxy.$Proxy34.save(Unknown Source), sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method), sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62), sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43), java.lang.reflect.Method.invoke(Method.java:498), org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343), org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163), org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88), com.revature.aspects.LoggingAspect.log(LoggingAspect.java:24), sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method), sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62), sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43), java.lang.reflect.Method.invoke(Method.java:498), org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644), org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633), org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186), org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186), org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212), com.sun.proxy.$Proxy36.save(Unknown Source), com.revature.services.FlowerService.addFlower(FlowerService.java:37), com.revature.services.FlowerService$$FastClassBySpringCGLIB$$ed5f9599.invoke(<generated>), org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218), org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163), org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88), com.revature.aspects.LoggingAspect.log(LoggingAspect.java:24), sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method), sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62), sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43), java.lang.reflect.Method.invoke(Method.java:498), org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644), org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633), org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186), org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:294), org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186), org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186), org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688), com.revature.services.FlowerService$$EnhancerBySpringCGLIB$$6ad97905.addFlower(<generated>), com.revature.driver.FlowerDriver.main(FlowerDriver.java:23)]
2020-12-23 17:32:46 ERROR $Proxy34:26 - could not execute statement; SQL [n/a]; constraint [flower_name_key]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement
2020-12-23 17:32:46 WARN  $Proxy34:27 - [org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:296), org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:253), org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:527), org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61), org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242), org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:153), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186), org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:131), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186), org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186), org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212), com.sun.proxy.$Proxy34.save(Unknown Source), sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method), sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62), sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43), java.lang.reflect.Method.invoke(Method.java:498), org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343), org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163), org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88), com.revature.aspects.LoggingAspect.log(LoggingAspect.java:24), sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method), sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62), sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43), java.lang.reflect.Method.invoke(Method.java:498), org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644), org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633), org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186), org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186), org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212), com.sun.proxy.$Proxy36.save(Unknown Source), com.revature.services.FlowerService.addFlower(FlowerService.java:37), com.revature.services.FlowerService$$FastClassBySpringCGLIB$$ed5f9599.invoke(<generated>), org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218), org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163), org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88), com.revature.aspects.LoggingAspect.log(LoggingAspect.java:24), sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method), sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62), sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43), java.lang.reflect.Method.invoke(Method.java:498), org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644), org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633), org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186), org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:294), org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186), org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186), org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688), com.revature.services.FlowerService$$EnhancerBySpringCGLIB$$6ad97905.addFlower(<generated>), com.revature.driver.FlowerDriver.main(FlowerDriver.java:23)]
2020-12-23 17:32:57 DEBUG logging:55 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-12-23 17:32:57 INFO  LogHelper:46 - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-12-23 17:32:57 INFO  Version:54 - HHH000412: Hibernate Core {4.3.11.Final}
2020-12-23 17:32:57 INFO  Environment:239 - HHH000206: hibernate.properties not found
2020-12-23 17:32:57 INFO  Environment:346 - HHH000021: Bytecode provider name : javassist
2020-12-23 17:32:57 INFO  Version:66 - HCANN000001: Hibernate Commons Annotations {4.0.5.Final}
2020-12-23 17:32:59 INFO  Dialect:145 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2020-12-23 17:32:59 INFO  LobCreatorBuilder:123 - HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
2020-12-23 17:32:59 INFO  ASTQueryTranslatorFactory:47 - HHH000397: Using ASTQueryTranslatorFactory
2020-12-23 17:33:03 TRACE FlowerService:21 - Method with signature: List com.revature.services.FlowerService.getAll()
2020-12-23 17:33:03 TRACE FlowerService:22 - with arguments: []
2020-12-23 17:33:03 TRACE $Proxy34:21 - Method with signature: List org.springframework.data.jpa.repository.JpaRepository.findAll()
2020-12-23 17:33:03 TRACE $Proxy34:22 - with arguments: []
2020-12-23 17:33:03 TRACE $Proxy34:30 - List org.springframework.data.jpa.repository.JpaRepository.findAll() returned: [Flower [id=1, name=rose, currentPrice=5.99], Flower [id=2, name=daisy, currentPrice=5.25], Flower [id=3, name=sunflower, currentPrice=6.99], Flower [id=4, name=hibiscus, currentPrice=9.89], Flower [id=5, name=peony, currentPrice=7.49], Flower [id=7, name=Tulip, currentPrice=2.99], Flower [id=9, name=echinacea, currentPrice=2.99], Flower [id=11, name=a, currentPrice=2.99], Flower [id=13, name=b, currentPrice=2.99], Flower [id=14, name=c, currentPrice=2.99], Flower [id=15, name=d, currentPrice=2.99], Flower [id=16, name=e, currentPrice=2.99], Flower [id=17, name=g, currentPrice=2.99]]
2020-12-23 17:33:03 TRACE $Proxy34:30 - List com.revature.services.FlowerService.getAll() returned: [Flower [id=1, name=rose, currentPrice=5.99], Flower [id=2, name=daisy, currentPrice=5.25], Flower [id=3, name=sunflower, currentPrice=6.99], Flower [id=4, name=hibiscus, currentPrice=9.89], Flower [id=5, name=peony, currentPrice=7.49], Flower [id=7, name=Tulip, currentPrice=2.99], Flower [id=9, name=echinacea, currentPrice=2.99], Flower [id=11, name=a, currentPrice=2.99], Flower [id=13, name=b, currentPrice=2.99], Flower [id=14, name=c, currentPrice=2.99], Flower [id=15, name=d, currentPrice=2.99], Flower [id=16, name=e, currentPrice=2.99], Flower [id=17, name=g, currentPrice=2.99]]
2020-12-23 17:33:03 TRACE FlowerService:21 - Method with signature: void com.revature.services.FlowerService.addFlower(Flower)
2020-12-23 17:33:03 TRACE FlowerService:22 - with arguments: [Flower [id=null, name=h, currentPrice=2.99]]
2020-12-23 17:33:03 TRACE $Proxy34:21 - Method with signature: Object org.springframework.data.repository.CrudRepository.save(Object)
2020-12-23 17:33:03 TRACE $Proxy34:22 - with arguments: [Flower [id=null, name=h, currentPrice=2.99]]
2020-12-23 17:33:03 TRACE $Proxy34:30 - Object org.springframework.data.repository.CrudRepository.save(Object) returned: Flower [id=19, name=h, currentPrice=2.99]
2020-12-23 17:33:03 TRACE $Proxy34:30 - void com.revature.services.FlowerService.addFlower(Flower) returned: null
2020-12-23 17:33:03 TRACE FlowerService:21 - Method with signature: List com.revature.services.FlowerService.getAll()
2020-12-23 17:33:03 TRACE FlowerService:22 - with arguments: []
2020-12-23 17:33:03 TRACE $Proxy34:21 - Method with signature: List org.springframework.data.jpa.repository.JpaRepository.findAll()
2020-12-23 17:33:03 TRACE $Proxy34:22 - with arguments: []
2020-12-23 17:33:03 TRACE $Proxy34:30 - List org.springframework.data.jpa.repository.JpaRepository.findAll() returned: [Flower [id=1, name=rose, currentPrice=5.99], Flower [id=2, name=daisy, currentPrice=5.25], Flower [id=3, name=sunflower, currentPrice=6.99], Flower [id=4, name=hibiscus, currentPrice=9.89], Flower [id=5, name=peony, currentPrice=7.49], Flower [id=7, name=Tulip, currentPrice=2.99], Flower [id=9, name=echinacea, currentPrice=2.99], Flower [id=11, name=a, currentPrice=2.99], Flower [id=13, name=b, currentPrice=2.99], Flower [id=14, name=c, currentPrice=2.99], Flower [id=15, name=d, currentPrice=2.99], Flower [id=16, name=e, currentPrice=2.99], Flower [id=17, name=g, currentPrice=2.99], Flower [id=19, name=h, currentPrice=2.99]]
2020-12-23 17:33:03 TRACE $Proxy34:30 - List com.revature.services.FlowerService.getAll() returned: [Flower [id=1, name=rose, currentPrice=5.99], Flower [id=2, name=daisy, currentPrice=5.25], Flower [id=3, name=sunflower, currentPrice=6.99], Flower [id=4, name=hibiscus, currentPrice=9.89], Flower [id=5, name=peony, currentPrice=7.49], Flower [id=7, name=Tulip, currentPrice=2.99], Flower [id=9, name=echinacea, currentPrice=2.99], Flower [id=11, name=a, currentPrice=2.99], Flower [id=13, name=b, currentPrice=2.99], Flower [id=14, name=c, currentPrice=2.99], Flower [id=15, name=d, currentPrice=2.99], Flower [id=16, name=e, currentPrice=2.99], Flower [id=17, name=g, currentPrice=2.99], Flower [id=19, name=h, currentPrice=2.99]]
2020-12-23 17:33:03 TRACE FlowerService:21 - Method with signature: Flower com.revature.services.FlowerService.getFlower(Integer)
2020-12-23 17:33:03 TRACE FlowerService:22 - with arguments: [1]
2020-12-23 17:33:03 TRACE $Proxy34:21 - Method with signature: Object org.springframework.data.repository.CrudRepository.findOne(Serializable)
2020-12-23 17:33:03 TRACE $Proxy34:22 - with arguments: [1]
2020-12-23 17:33:03 TRACE $Proxy34:30 - Object org.springframework.data.repository.CrudRepository.findOne(Serializable) returned: Flower [id=1, name=rose, currentPrice=5.99]
2020-12-23 17:33:03 TRACE $Proxy34:30 - Flower com.revature.services.FlowerService.getFlower(Integer) returned: Flower [id=1, name=rose, currentPrice=5.99]
2020-12-23 17:33:03 TRACE PurchaseService:21 - Method with signature: Set com.revature.services.PurchaseService.getPurchasesByFlower(Flower)
2020-12-23 17:33:03 TRACE PurchaseService:22 - with arguments: [Flower [id=1, name=rose, currentPrice=5.99]]
2020-12-23 17:33:03 TRACE $Proxy37:21 - Method with signature: Set com.revature.data.PurchaseRepository.findByFlower(Flower)
2020-12-23 17:33:03 TRACE $Proxy37:22 - with arguments: [Flower [id=1, name=rose, currentPrice=5.99]]
2020-12-23 17:33:04 TRACE $Proxy37:30 - Set com.revature.data.PurchaseRepository.findByFlower(Flower) returned: [Purchase [id=1, flower=Flower [id=1, name=rose, currentPrice=5.99], price=6.99], Purchase [id=2, flower=Flower [id=1, name=rose, currentPrice=5.99], price=4.99]]
2020-12-23 17:33:04 TRACE $Proxy37:30 - Set com.revature.services.PurchaseService.getPurchasesByFlower(Flower) returned: [Purchase [id=1, flower=Flower [id=1, name=rose, currentPrice=5.99], price=6.99], Purchase [id=2, flower=Flower [id=1, name=rose, currentPrice=5.99], price=4.99]]
2020-12-23 17:33:04 TRACE FlowerService:21 - Method with signature: void com.revature.services.FlowerService.throwExceptionFlower(String)
2020-12-23 17:33:04 TRACE FlowerService:22 - with arguments: [null]
2020-12-23 17:33:04 ERROR FlowerService:26 - 
2020-12-23 17:33:04 WARN  FlowerService:27 - [com.revature.services.FlowerService.throwExceptionFlower(FlowerService.java:41), com.revature.services.FlowerService$$FastClassBySpringCGLIB$$ed5f9599.invoke(<generated>), org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218), org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163), org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88), com.revature.aspects.LoggingAspect.log(LoggingAspect.java:24), sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method), sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62), sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43), java.lang.reflect.Method.invoke(Method.java:498), org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644), org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633), org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186), org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:294), org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186), org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93), org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186), org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688), com.revature.services.FlowerService$$EnhancerBySpringCGLIB$$6ad97905.throwExceptionFlower(<generated>), com.revature.driver.FlowerDriver.main(FlowerDriver.java:28)]
