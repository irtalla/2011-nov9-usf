Since authors and editors are so different, it makes
sense to have an author type and an editor type, both 
of which extend the person type. 

So the schema will contain : 
	1) author relation 
	2) editor relation 
	
Editors can be senior editors, assistant editors, or 
general editors. General editorship implies that an
editor HAS A role. In fact, an editor may have multiple
roles at once; therefore, the schema will contain 

	3) role relation 

author submit story pitches and editors review them, 
so the schema will contain

	4) pitch relation 
	
Each pitch HAS A form and genre there are pulled from 
a reference table. Therefore there is a fixed genre set 
and a fixed form set. Therefore, the schema will contain:

	5) form relation
	6) genre relation
	
Each pitch may also have optional attachments. Therefore, 
the schema will contain: 

	7) attachment relation 
	
Editors can accept or reject a pitch. A rejection HAS A 
explanation. In this implementation, an acceptance will 
also have an explanation. While both a rejection and an
acceptance are a type of decision on a pitch, so they can 
Therefore, the schema will contain: 

	8) decision relation 
	
For now, decisions can take two types: accepted or 
rejected. Therefore, The schema will contain:

	9) decision_type relation

Pitches may also be delayed pending an informational 
request initiated by an editor. Therefore, the schema 
will contain:

	10) external_request relation

This relation relates an editor, a pitch, and an author. 

Since pitches can be rejected, accepted, or delayed for
informational request, a pitch HAS A status. Therefore, 
the relation will contain:

	11) pitch_status relation 
	
Pitches may also be designated high priority, implying also
that pitches may be low priority. Therefore a pitch HAS A
priority. Therefore, the schema will contain:

	12) pitch_priority relation 
	
General editors may also request more information from 
assistant editors, and senior editors may also request more 
information from general editors. These are instances of 
internal requests. Therefore, the schema will contain: 

	13) internal_request relation 
	
After a pitch is approved, the author must submit a draft. 
A draft is an object associated with a pitch. Therefore, the 
schema will contain:

	14) draft relation 
	
Since drafts and pitches are in one-to-one correspondence, 
There is no need for a join table. 

Since editors can be in multiple genres, there is a many-to-many 
relationship between editors and genres. This implies the 
need for a join table. Therefore, the schema will contain: 

	15) editor_genre relation 

Since we are creating a pipeline for story pitch submissions,
we support a multi-stage process. Independent of a pitch's
status is a pitch's current stage in the pipeline. So,
in addition to a status, a pitch HAS A current stage. 
Therefore, the schema will contain: 

	16) current_stage
	
The values of this relation shall be: 
	genre review ( 
	general review
	senior review
	final review ( draft under review )
	
pitches, decisions, requests, and drafts should have a creation time. 
pitches and drafts should have a last-modified time. 