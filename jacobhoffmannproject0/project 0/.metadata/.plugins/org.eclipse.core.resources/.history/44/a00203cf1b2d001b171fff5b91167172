package data;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.Set;

import exceptions.NonUniqueUsernameException;
import models.User;
import utils.ConnectionUtil;

public class UserPostgres implements UserDao{
	private ConnectionUtil cu = ConnectionUtil.getConnectionUtil();
	public User add(User u) throws NonUniqueUsernameException {
		User t = new User();
	
		try (Connection conn = cu.getConnection()) {
			conn.setAutoCommit(false);
			String sql = "insert into users values (default, ?, ?, ?, ?, ?)";
			String[] keys = {"user_id"};
			PreparedStatement pstmt = conn.prepareStatement(sql, keys);
			pstmt.setString(1, t.getFname());
			pstmt.setString(2, t.getLname());
			pstmt.setString(3, t.getUsername());
			pstmt.setString(4, t.getPassword());
			pstmt.setBoolean(5, t.isIsEmployee());
			
			pstmt.executeUpdate();
			ResultSet rs = pstmt.getGeneratedKeys();
			
			if (rs.next()) {
				u = t;
				u.setUserId(rs.getInt(1));
				conn.commit();
			} else {
				conn.rollback();
			}
		
	}catch (Exception e) {
		if (e.getMessage().contains("violates unique constraint")) {
			throw new NonUniqueUsernameException();
		}
		e.printStackTrace();
	}	return t;
	}
	
	public User getByUsername(String username) {
	return null;	
	}

	@Override
	public User getById(Integer id) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Set<User> getAll() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public void update(User t) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void delete(User t) {
		// TODO Auto-generated method stub
		
	}
	
	}
